"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Nextube Donations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsersApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class UsersApi extends runtime.BaseAPI {
    /**
     */
    usersEmailConfirmationResendRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["X-Session-Token"] = yield this.configuration.apiKey("X-Session-Token"); // Token authentication
            }
            const response = yield this.request({
                path: `/api/v1/users/emails/confirmation/resend`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.UsersProfileUpdate200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    usersEmailConfirmationResend(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.usersEmailConfirmationResendRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    usersLoginRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['usersLoginRequest'] == null) {
                throw new runtime.RequiredError('usersLoginRequest', 'Required parameter "usersLoginRequest" was null or undefined when calling usersLogin().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/users/login`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.UsersLoginRequestToJSON)(requestParameters['usersLoginRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.UsersRegister200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    usersLogin(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.usersLoginRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    usersProfileGetRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["X-Session-Token"] = yield this.configuration.apiKey("X-Session-Token"); // Token authentication
            }
            const response = yield this.request({
                path: `/api/v1/users/profile`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.UsersProfileGet200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    usersProfileGet(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.usersProfileGetRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    usersProfileUpdateRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['usersProfileUpdateRequest'] == null) {
                throw new runtime.RequiredError('usersProfileUpdateRequest', 'Required parameter "usersProfileUpdateRequest" was null or undefined when calling usersProfileUpdate().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["X-Session-Token"] = yield this.configuration.apiKey("X-Session-Token"); // Token authentication
            }
            const response = yield this.request({
                path: `/api/v1/users/profile`,
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.UsersProfileUpdateRequestToJSON)(requestParameters['usersProfileUpdateRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.UsersProfileUpdate200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    usersProfileUpdate(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.usersProfileUpdateRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    usersRegisterRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['usersRegisterRequest'] == null) {
                throw new runtime.RequiredError('usersRegisterRequest', 'Required parameter "usersRegisterRequest" was null or undefined when calling usersRegister().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/users/register`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.UsersRegisterRequestToJSON)(requestParameters['usersRegisterRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.UsersRegister200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    usersRegister(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.usersRegisterRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.UsersApi = UsersApi;
