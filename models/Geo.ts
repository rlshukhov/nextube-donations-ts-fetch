/* tslint:disable */
/* eslint-disable */
/**
 * Nextube Donations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { City } from './City';
import {
    CityFromJSON,
    CityFromJSONTyped,
    CityToJSON,
} from './City';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
} from './Country';
import type { Region } from './Region';
import {
    RegionFromJSON,
    RegionFromJSONTyped,
    RegionToJSON,
} from './Region';

/**
 * 
 * @export
 * @interface Geo
 */
export interface Geo {
    /**
     * 
     * @type {City}
     * @memberof Geo
     */
    city: City;
    /**
     * 
     * @type {Region}
     * @memberof Geo
     */
    region: Region;
    /**
     * 
     * @type {Country}
     * @memberof Geo
     */
    country: Country;
}

/**
 * Check if a given object implements the Geo interface.
 */
export function instanceOfGeo(value: object): boolean {
    if (!('city' in value)) return false;
    if (!('region' in value)) return false;
    if (!('country' in value)) return false;
    return true;
}

export function GeoFromJSON(json: any): Geo {
    return GeoFromJSONTyped(json, false);
}

export function GeoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Geo {
    if (json == null) {
        return json;
    }
    return {
        
        'city': CityFromJSON(json['city']),
        'region': RegionFromJSON(json['region']),
        'country': CountryFromJSON(json['country']),
    };
}

export function GeoToJSON(value?: Geo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'city': CityToJSON(value['city']),
        'region': RegionToJSON(value['region']),
        'country': CountryToJSON(value['country']),
    };
}

