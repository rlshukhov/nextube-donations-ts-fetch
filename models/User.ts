/* tslint:disable */
/* eslint-disable */
/**
 * Nextube Donations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicFile } from './PublicFile';
import {
    PublicFileFromJSON,
    PublicFileFromJSONTyped,
    PublicFileToJSON,
} from './PublicFile';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isEmailConfirmed: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    registrationDate: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isModerationApproved: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     * 
     * @type {PublicFile}
     * @memberof User
     */
    avatar: PublicFile;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    if (!('email' in value)) return false;
    if (!('isEmailConfirmed' in value)) return false;
    if (!('registrationDate' in value)) return false;
    if (!('isModerationApproved' in value)) return false;
    if (!('id' in value)) return false;
    if (!('avatar' in value)) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'isEmailConfirmed': json['is_email_confirmed'],
        'registrationDate': json['registration_date'],
        'isModerationApproved': json['is_moderation_approved'],
        'id': json['id'],
        'avatar': PublicFileFromJSON(json['avatar']),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'email': value['email'],
        'is_email_confirmed': value['isEmailConfirmed'],
        'registration_date': value['registrationDate'],
        'is_moderation_approved': value['isModerationApproved'],
        'id': value['id'],
        'avatar': PublicFileToJSON(value['avatar']),
    };
}

